-- 1. Crear la base de datos (ejecutar solo si no la creaste en AWS RDS)
CREATE DATABASE IF NOT EXISTS marketplace;

-- 2. Seleccionar la base de datos para usarla
USE marketplace;

-- 3. Crear la tabla de Usuarios con el campo de número de celular y fecha de nacimiento
CREATE TABLE IF NOT EXISTS users (
    id_user CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    username VARCHAR(255) UNIQUE,
    email VARCHAR(255) UNIQUE,
    password_hash VARCHAR(255),
    phone VARCHAR(20),  -- Número de celular (se asume que este campo es para celular)
    birth_date DATE,  -- Fecha de nacimiento
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_guest BOOLEAN DEFAULT FALSE,
    avatar VARCHAR(255)
);

-- 4. Tabla de Métodos de Pago
CREATE TABLE IF NOT EXISTS payment_methods (
    id_payment CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    id_user CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'users'
    card_number VARCHAR(16) NOT NULL,
    card_holder VARCHAR(255) NOT NULL,
    expiration_date DATE NOT NULL,
    cvv VARCHAR(4) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 14. Tabla de Categorías
CREATE TABLE IF NOT EXISTS categories (
    id_category CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL UNIQUE,
    description JSON
);

-- 5. Tabla de Productos con la descripción como JSON
CREATE TABLE IF NOT EXISTS products (
    id_product CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    description JSON,  -- Ahora la descripción es un JSON
    price DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    image_url VARCHAR(255),  -- URL de la imagen
    id_category CHAR(36),  -- Relación con la categoría
    CONSTRAINT fk_category FOREIGN KEY (id_category) REFERENCES categories(id_category)
);

-- 6. Tabla de Pedidos (Ordenes de Compra) con campos de descripción, total y ahorro
CREATE TABLE IF NOT EXISTS orders (
    id_order CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    id_user CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'users'
    id_payment CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'payment_methods'
    total DECIMAL(10,2) NOT NULL,  -- Total de la orden
    savings DECIMAL(10,2) NOT NULL,  -- Ahorro generado en la orden
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('pending', 'completed', 'cancelled') DEFAULT 'pending',
    description JSON  -- Descripción de la orden como JSON
);

-- 7. Eliminar la tabla de Detalles de Pedido (order_items)
DROP TABLE IF EXISTS order_items;

-- 8. Tabla de Wallet (Ahorros del usuario)
CREATE TABLE IF NOT EXISTS wallet (
    id_wallet CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    id_user CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'users'
    balance DECIMAL(10,2) DEFAULT 0.00,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 9. Eliminar la tabla de Ahorros por cada compra (ya no es necesaria)
DROP TABLE IF EXISTS savings;

-- 10. Tabla de Planes de Ahorro
CREATE TABLE IF NOT EXISTS saving_plans (
    id_plan CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(100) NOT NULL,
    min_amount DECIMAL(10,2) NOT NULL,
    min_transactions INT NOT NULL,
    annual_interest DECIMAL(5,2) NOT NULL
);

-- 11. Tabla de Historial de Intereses
CREATE TABLE IF NOT EXISTS interest_history (
    id_interest CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    id_user CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'users'
    id_wallet CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'wallet'
    interest_amount DECIMAL(10,2) NOT NULL,
    calculated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 12. Tabla de Relación entre Usuarios y Planes de Ahorro
CREATE TABLE IF NOT EXISTS user_saving_plans (
    id_user CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'users'
    id_plan CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'saving_plans'
    start_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id_user, id_plan)
);

-- 13. Tabla del Carrito de Compras
CREATE TABLE IF NOT EXISTS shopping_cart (
    id_cart CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    id_user CHAR(36) NOT NULL,  -- Cambié a CHAR(36) para coincidir con el UUID de 'users'
    products JSON NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
