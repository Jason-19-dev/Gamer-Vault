openapi: 3.0.0
info:
    title: Gamer Vault API
    description: API para una aplicación de marketplace que permite a los usuarios comprar, vender y gestionar productos.
    version: 1.0.0
servers:
    - url: https://app.gamer.vault.dev.com/v1
      description: Servidor de desarrollo
    # - url: https://app.gemer.vautl.com/v1
    #   description: Servidor de produccion
tags:
    - name: Auth
      description: Manejo de los Usuarios
    - name: Products
      description: Manejo de los productos
    - name: Users
      description: Manejo de los Usuarios
    - name: Order
      description: Manejo de las Ordenes de los Usuarios

paths:
    # Autenticación y Autorización de Usuarios
    /auth/signin:
        post:
            tags: 
                - Auth
            summary: Registrar un nuevo usuario
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                email:
                                    type: string
                                password:
                                    type: string
            responses:
                "200":
                    description: Usuario registrado exitosamente
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token_jwt:
                                        type: string

    /auth/login:
        post:
            tags:
                - Auth
            summary: Iniciar sesion
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
            responses:
                "200":
                    description: Inicio de sesión exitoso
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token_jwt:
                                        type: string

    /auth/me:
        get:
            tags:
                - Auth
            summary: Obtener información del usuario autenticado
            responses:
                "200":
                    description: Información del usuario
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                    username:
                                        type: string
                                    email:
                                        type: string

    # Productos
    /products:
        get:
            tags:
                - Products
            summary: Obtener lista de productos
            responses:
                "200":
                    description: Lista de productos
                    content:
                        application/json:
                            schema:
                               $ref: '#/components/schemas/Product'
                '400':
                  description: Invalid input
                '422':
                  description: Validation exception

        post:
            tags:
                - Products
            summary: Crear un nuevo producto
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                price:
                                    type: number
                                description:
                                    type: string
                                stock:
                                    type: number
                                category:
                                    type: string
                                image_url:
                                    type: string
                                create_at:
                                    type: string
                                status:
                                    type: string
            responses:
                "201":
                    description: Producto creado exitosamente
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                    name:
                                        type: string
                                    price:
                                        type: number
    /products/{id}:
        get:
            tags:
                - Products
            summary: Obtener detalles de un producto
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: Detalles del producto

                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Product'
        put:
            tags:
                - Products
            summary: Actualizar un producto
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                         $ref: '#/components/schemas/Product'
            responses:
                "200":
                    description: Producto actualizado exitosamente
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Product'
        delete:
            tags:
                - Products
            summary: Eliminar un producto
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: Producto eliminado exitosamente
                    content:
                        application/json:
                            schema:
                               $ref: '#/components/schemas/Product'
    # # Users
    # /auth/user:
    #     post:
    #         tags:
    #             - Users
    #     summary: Obtener info de Usuario por token_jwt
    #     requestBody:
    #         required: true
    #         content:
    #             application/json:
    #                 schema:
    #                      type: object
    #                       properties:
    #                         username:
    #                             type: string

    #     responses:
    #         "201":
    #             description: Usuarios Obtenido exitosamente
    #             content:
    #                 application/json:
    #                     schema:
    #                         type: object
    #                         properties:
    #                             username: string
                                
 
    # Gestión de Órdenes
    /orders:
        post:
            tags:
                - Order
            summary: Crear una nueva orden
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                product_id:
                                    type: integer
                                quantity:
                                    type: integer
                                shipping_address:
                                    type: string
            responses:
                "201":
                    description: Orden creada exitosamente
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    order_id:
                                        type: integer
                                    status:
                                        type: string
                                    total:
                                        type: number

    /orders/{id}:
        get:
            tags:
                - Order
            summary: Obtener detalles de una orden
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            responses:
                "200":
                    description: Detalles de la orden
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    order_id:
                                        type: integer
                                    product_id:
                                        type: integer
                                    status:
                                        type: string
                                    total:
                                        type: number
components:
    schemas:
      Product:
        type: object
        properties:
            id:
                type: integer
                format: int64
                example: 1
            name:
                type: string    
            price:
                type: number
                multipleOf: 2.5
            description:
                type: string
            stock:
                type: number
            category:
                type: string
            image_url:
                type: string
            create_at:
                type: string
            status:
                description: Estado ddel producto
                type: string
                enum:
                    - complete
                    - proding


# securitySchemes:
#   BearerAuth:
#     type: http
#     scheme: bearer
#     bearerFormat: JWT
